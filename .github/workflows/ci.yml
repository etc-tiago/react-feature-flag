name: CI

on:
  push:
    branches: main
  pull_request:
    branches: main

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.15.0
        
    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
        
    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-
          
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run linter
      run: pnpm exec biome check src/
      
    - name: Run type check
      run: pnpm exec tsc --noEmit
      
    - name: Run tests
      run: pnpm run test:ci
      
    - name: Build package
      run: pnpm run build
      
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-node-${{ matrix.node-version }}
        path: test-results.json
        retention-days: 30
        
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: coverage-reports-node-${{ matrix.node-version }}
        path: coverage/
        retention-days: 30

  security-audit:
    runs-on: ubuntu-latest
    needs: test-and-build
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.15.0
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run security audit
      run: pnpm audit --audit-level moderate
      
  release-check:
    runs-on: ubuntu-latest
    needs: [test-and-build, security-audit]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        
    - name: Setup pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10.15.0
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Build for release
      run: pnpm run build
      
    - name: Check build output
      run: |
        ls -la dist/
        echo "Build completed successfully"
